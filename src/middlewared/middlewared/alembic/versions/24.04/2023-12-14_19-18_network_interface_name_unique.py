"""Make network interface names unique

Revision ID: 058f00440129
Revises: df1a322df40d
Create Date: 2023-12-14 19:18:38.014275+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision = '058f00440129'
down_revision = 'df1a322df40d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    ignorelist = set()
    for id1, name1 in conn.execute(text('SELECT id, int_interface FROM network_interfaces ORDER BY id ASC')).fetchall():
        if id1 in ignorelist:
            continue

        for i, (id2, name2) in enumerate(
            conn.execute(text('''
                SELECT id, int_interface
                FROM network_interfaces
                WHERE id > :id1 AND int_interface = :name1
                ORDER BY id ASC
            '''), {"id1": id1, "name1": name1}).fetchall()
        ):
            conn.execute(
                text('UPDATE network_interfaces SET int_interface = :interface WHERE id = :id'), 
                {"interface": f'{name2}_{i + 1}', "id": id2}
            )
            ignorelist.add(id2)

    with op.batch_alter_table('network_interfaces', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_network_interfaces_int_interface'), ['int_interface'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('network_interfaces', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_network_interfaces_int_interface'), type_='unique')

    # ### end Alembic commands ###
